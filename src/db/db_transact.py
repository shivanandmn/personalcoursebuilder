from src.db.mongodb import connect_to_mongodb
import random
import string


class DBTransaction:
    def __init__(self, db_name="mydatabase") -> None:
        self.client = connect_to_mongodb()
        self.db = self.client[db_name]

    def random_unique_filename(self, length=10):
        """Generates a random unique filename (used for unique _id generation)."""
        return "".join(random.choices(string.ascii_lowercase + string.digits, k=length))

    def insert_one(self, doc, collection="users_feedback"):
        """Inserts a single document into the specified collection."""
        collection_ref = self.db[collection]
        doc["_id"] = self.random_unique_filename()  # Create a unique ID
        result = collection_ref.insert_one(doc)
        return result.inserted_id

    def update_one(self, doc_id, updates, collection="users_feedback"):
        """Updates a document by its ID in the specified collection."""
        collection_ref = self.db[collection]
        result = collection_ref.update_one({"_id": doc_id}, {"$set": updates})
        return doc_id if result.modified_count > 0 else None

    def get_one(self, doc_id, collection="users_feedback"):
        """Retrieves a document by its ID from the specified collection."""
        collection_ref = self.db[collection]
        doc = collection_ref.find_one({"_id": doc_id})
        return doc if doc else None

    def delete_one(self, doc_id, collection="users_feedback"):
        """Deletes a document by its ID from the specified collection."""
        collection_ref = self.db[collection]
        result = collection_ref.delete_one({"_id": doc_id})
        return doc_id if result.deleted_count > 0 else None

    def get_based_on_kv(self, field, value, collection="users_feedback"):
        """Retrieves documents based on a key-value pair from the specified collection."""
        collection_ref = self.db[collection]
        results = collection_ref.find({field: value})
        return [doc for doc in results]

    def get_based_on_knn(self, vector, k=5, collection="users_feedback"):
        """Performs a KNN search using the Atlas Vector Search capabilities."""
        collection_ref = self.db[collection]
        pipeline = [
            {
                "$vectorSearch": {
                    "index": "vector_index",
                    "queryVector": vector,
                    "path": "vector",
                    "exact": False,
                    "limit": 50,
                    "numCandidates": 100,
                }
            },
            {
                "$project": {
                    "_id": 1,
                    "name": 1,
                    "description": 1,
                    "duration": 1,
                    "pricing": 1,
                    "level": 1,
                    "provider": 1,
                    "num_rating": 1,
                    "avg_rating": 1,
                    "rating": 1,
                    "language": 1,
                    "certificate": 1,
                    "subject": 1,
                    "type": 1,
                    "vector":1,
                    "score": {"$meta": "vectorSearchScore"},
                }
            },
        ]
        try:
            results = collection_ref.aggregate(pipeline)
            return [doc for doc in results]
        except Exception as e:
            print(f"Error during KNN search: {e}")
            return []


if __name__ == "__main__":
    # Example usage
    database = DBTransaction("course_builder")

    # Example to retrieve a document based on KNN search
    query_vector = [
        0.0,
        0.0063598789274692535,
        0.2084551304578781,
        -0.3339681327342987,
        -0.057624369859695435,
        -0.0512082539498806,
        -0.07443546503782272,
        0.10687681287527084,
        0.04951528459787369,
        -0.04229626804590225,
        0.2938954830169678,
        -0.014129212126135826,
        -0.2105265110731125,
        0.43220749497413635,
        -0.045160867273807526,
        0.38305947184562683,
        -0.19817237555980682,
        -0.2257028967142105,
        -0.08832772076129913,
        -0.1084398478269577,
        -0.09151006489992142,
        -0.2594590485095978,
        -0.310441792011261,
        0.12495943158864975,
        -0.010200618766248226,
        -0.4129152297973633,
        0.2066081166267395,
        -0.3436751067638397,
        0.03826843202114105,
        -0.2322511523962021,
        -0.3192039132118225,
        0.20626510679721832,
        -0.46926963329315186,
        -0.03951349854469299,
        -0.12101065367460251,
        0.0947871282696724,
        0.03180789574980736,
        0.2719556987285614,
        0.0163229089230299,
        0.015949759632349014,
        -0.14859481155872345,
        -0.2765658497810364,
        0.1925104856491089,
        0.06875235587358475,
        0.027354571968317032,
        0.09281450510025024,
        0.0734899714589119,
        -0.09959588944911957,
        -0.015342408791184425,
        -0.3072996139526367,
        -0.241790771484375,
        0.13266797363758087,
        0.07827132195234299,
        -0.01457312610000372,
        0.013208900578320026,
        -0.23233504593372345,
        -0.04800646752119064,
        0.04334782436490059,
        0.14066310226917267,
        -0.33024731278419495,
        0.06146526336669922,
        0.3837758004665375,
        0.041788455098867416,
        -0.09713492542505264,
        0.41233140230178833,
        0.24250812828540802,
        0.2534888982772827,
        0.3575574457645416,
        0.15428803861141205,
        0.22093075513839722,
        -0.11930282413959503,
        -0.38685745000839233,
        -0.0368410088121891,
        -0.05568971112370491,
        -0.030794737860560417,
        0.24258972704410553,
        0.12036174535751343,
        -0.15750069916248322,
        -0.16150353848934174,
        0.13532754778862,
        -0.04343920573592186,
        0.13652874529361725,
        0.1600622534751892,
        -0.002435675822198391,
        0.10055316239595413,
        -0.0650758296251297,
        0.24551859498023987,
        0.14145493507385254,
        -0.16714897751808167,
        0.22665522992610931,
        -0.1987055242061615,
        -0.15837739408016205,
        -0.44259408116340637,
        0.0659690573811531,
        0.054839324206113815,
        0.11405056715011597,
        -0.2498408555984497,
        -0.043702878057956696,
        0.05866755545139313,
        0.05869969725608826,
        0.4907292425632477,
        -0.10654222220182419,
        0.07243611663579941,
        -0.061365533620119095,
        -0.3754592835903168,
        0.3578838109970093,
        0.1069040298461914,
        0.2571457028388977,
        -0.20926454663276672,
        0.08064573258161545,
        -0.22172099351882935,
        -0.10235528647899628,
        0.14642205834388733,
        0.20524249970912933,
        0.20814670622348785,
        0.27591583132743835,
        -0.11928718537092209,
        -0.17538078129291534,
        0.2351449579000473,
        0.10652634501457214,
        0.4416854977607727,
        0.2171621322631836,
        0.050263892859220505,
        -0.02032407745718956,
        0.040142402052879333,
        -0.11232675611972809,
        -0.0401422455906868,
        0.19007575511932373,
        0.029813794419169426,
        -0.17013633251190186,
        -0.08850904554128647,
        0.2976074516773224,
        0.02918057143688202,
        -0.0632210522890091,
        -0.07080996781587601,
        0.04817498102784157,
        0.120778888463974,
        0.062358349561691284,
        0.243324413895607,
        0.15835662186145782,
        -0.035234615206718445,
        -0.3494698703289032,
        0.13143669068813324,
        0.10281645506620407,
        -0.032907634973526,
        0.327884316444397,
        0.3540341258049011,
        0.036451078951358795,
        -0.08345306664705276,
        0.20778308808803558,
        -0.30652451515197754,
        -0.09538595378398895,
        -0.18242865800857544,
        0.42569291591644287,
        0.014614531770348549,
        0.06464124470949173,
        0.06357499957084656,
        -0.06689030677080154,
        0.013974728994071484,
        -0.49945762753486633,
        -0.03871476650238037,
        0.017884884029626846,
        0.08027448505163193,
        0.11272826790809631,
        0.21564021706581116,
        0.08012458682060242,
        -0.29072776436805725,
        0.10020042210817337,
        -0.17665477097034454,
        0.014512774534523487,
        -0.23713240027427673,
        0.016665197908878326,
        0.07265949994325638,
        0.03228385001420975,
        0.014631598256528378,
        0.22062942385673523,
        -0.013198282569646835,
        0.13449452817440033,
        -0.27700966596603394,
        -0.05556049942970276,
        -0.20895373821258545,
        -0.2734050452709198,
        -0.15688219666481018,
        -0.3127751648426056,
        -0.07429113239049911,
        -0.046121977269649506,
        0.01738879084587097,
        0.1902768760919571,
        0.362099289894104,
        -0.2572912871837616,
        0.09041190892457962,
        -0.031686168164014816,
        -0.35971033573150635,
        -0.1535070389509201,
        0.15573833882808685,
        -0.19409404695034027,
        -0.06627127528190613,
        -0.142746701836586,
        0.0912279486656189,
        -0.18950216472148895,
        -0.05648571625351906,
        -0.27605152130126953,
        0.07636278867721558,
        -0.2528282403945923,
        -0.05591971427202225,
        -0.30091923475265503,
        0.012914362363517284,
        0.31826668977737427,
        -0.042261868715286255,
        -0.13566434383392334,
        -0.0810825452208519,
        0.015025656670331955,
        0.122495137155056,
        -0.26144853234291077,
        -0.1006062924861908,
        0.12702663242816925,
        -0.21372491121292114,
        0.27826446294784546,
        0.20191483199596405,
        -0.1602962166070938,
        0.2212868332862854,
        0.26586979627609253,
        -0.18441005051136017,
        0.046506527811288834,
        -0.0835183635354042,
        -0.2164020538330078,
        -0.5060807466506958,
        -0.26532790064811707,
        0.016547832638025284,
        -0.016164949163794518,
        0.21429409086704254,
        -0.17200744152069092,
        0.09624357521533966,
        0.03678938001394272,
        0.06448177248239517,
        0.06740877777338028,
        0.3516210615634918,
        0.11834961920976639,
        0.1217387393116951,
        0.04695442318916321,
        -0.22659967839717865,
        -0.02983032539486885,
        0.12025820463895798,
        -0.08028612285852432,
        0.10718506574630737,
        -0.04991673305630684,
        -0.03710506483912468,
        -0.2709689438343048,
        -0.03313098102807999,
        -0.031192872673273087,
        0.4048336446285248,
        -0.11165782809257507,
        -0.0648728460073471,
        0.23588669300079346,
        0.06215466558933258,
        -0.11994963884353638,
        -0.0612022690474987,
        -0.05365468189120293,
        -0.03599812835454941,
        0.13775622844696045,
        -0.13832823932170868,
        0.3168397843837738,
        -0.3169983923435211,
        -0.07549984753131866,
        0.18683463335037231,
        -0.15071380138397217,
        0.23352284729480743,
        -0.04366857558488846,
        0.155040442943573,
        -0.26867035031318665,
        0.040403250604867935,
        -0.10736246407032013,
        0.2102857232093811,
        0.10985249280929565,
        -0.02873045764863491,
        0.3530966639518738,
        -0.12715794146060944,
        -0.17456074059009552,
        -0.09163887053728104,
        -0.26220715045928955,
        0.5779054164886475,
        -0.02433794178068638,
        0.00167792325373739,
        0.141425222158432,
        -0.2108062505722046,
        -0.12214083969593048,
        -0.03693824261426926,
        -0.18933838605880737,
        0.1569705754518509,
        -0.04869711399078369,
        -0.18991628289222717,
        -0.10633018612861633,
        -0.3467332422733307,
        -0.3100050389766693,
        0.05545369163155556,
        0.2901931405067444,
        -0.0921507254242897,
        0.12114878743886948,
        -0.17669032514095306,
        -0.04521127790212631,
        0.24091067910194397,
        -0.10378167033195496,
        -0.28270962834358215,
        -0.2123183012008667,
        -0.06221900135278702,
        0.1376407891511917,
        -0.1142292395234108,
        0.004896068479865789,
        0.1133226752281189,
        0.5061729550361633,
        0.16150972247123718,
        0.13860660791397095,
        -0.19454368948936462,
        0.0044568548910319805,
        -0.19894075393676758,
        0.10114011913537979,
        -0.00020206451881676912,
        -0.29229071736335754,
        -0.2150750607252121,
        0.2609548568725586,
        -0.2430383712053299,
        0.19876058399677277,
        -0.13292917609214783,
        -0.020972462370991707,
        0.32214659452438354,
        0.16730201244354248,
        0.0897037610411644,
        -0.1635916829109192,
        -0.006169767584651709,
        0.11331241577863693,
        -0.026975765824317932,
        -0.05656817927956581,
        -0.4038543701171875,
        0.04920969530940056,
        -0.3184026777744293,
        0.15812166035175323,
        -0.07194370031356812,
        0.17440801858901978,
        0.13014324009418488,
        -0.22479291260242462,
        -0.11634758859872818,
        0.042867377400398254,
        -0.2167375236749649,
        -0.07222843915224075,
        0.05953604727983475,
        0.12194564193487167,
        0.02757304720580578,
        0.10505305230617523,
        0.39765235781669617,
        0.1517840474843979,
        0.14971065521240234,
        0.06842316687107086,
        0.03587676212191582,
        -0.13466037809848785,
        0.0624515675008297,
        0.1250869333744049,
        0.17859990894794464,
        0.30707818269729614,
        -0.05294214189052582,
        -0.05021873116493225,
        0.045083750039339066,
        -0.058001790195703506,
        -0.35143378376960754,
        0.12426002323627472,
        0.04245838150382042,
        -0.3193735182285309,
        0.22461768984794617,
        0.16451780498027802,
        0.004885684698820114,
        -0.09292493760585785,
        0.20431102812290192,
        -0.08045708388090134,
        -0.39739590883255005,
        0.11362851411104202,
        0.31457605957984924,
        0.13506673276424408,
        0.17997169494628906,
        -0.0022599827498197556,
        -0.12960419058799744,
        0.06846000999212265,
        0.1851804405450821,
        -0.11053472757339478,
        -0.024370117112994194,
        -0.0028951799031347036,
        -0.04306788370013237,
    ]
    neighbors = database.get_based_on_knn(query_vector, k=3, collection="course_data")
    print(f"Nearest neighbors: {neighbors}")

{}
